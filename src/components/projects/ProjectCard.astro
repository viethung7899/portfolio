---
import type { MarkdownInstance } from 'astro';
import Icon from 'astro-icon';
import type { ProjectFrontMatter } from 'src/types';
export interface Props {
  project: MarkdownInstance<ProjectFrontMatter>;
}

const {frontmatter: {
  imageURL,
  title,
  github,
  demo,
}, Content} = Astro.props.project;

const linkStyles = 'hover:text-orange-500 hover:dark:text-teal-500 transition-colors';
const imgStyles = 'transition-all duration-300 w-full aspect-[16/9] rounded-lg hover:shadow-lg hover:shadow-orange-500 hover:dark:shadow-teal-500';

// A very weird hack to get the image
const images = import.meta.glob('../../content/images/projects/*');
const image = !imageURL ? undefined : await images[imageURL]() as Record<string,any>;
---

<div class="flex flex-col">
  <a href={demo || github}>
    {image
    ? <img
    {...image.default}
    class={imgStyles}
    alt={title}
    />
    
    : <div
    class={imgStyles}
    />
  }
  </a>
  <div class="flex items-center justify-between pt-6 pb-2">
    <a href={demo} class={`text-xl font-bold ${linkStyles}`}>{title}</a>
    <div class="gap-4 flex text-xl">
      {github && <a href={github} class={linkStyles} target="_blank">
          <Icon class="w-6 h-6" name="fa-solid:code" />
        </a>
      }
      {demo && <a href={demo} class={linkStyles} target="_blank">
          <Icon class="w-6 h-6" name="fa-solid:window-maximize" />
        </a>
      }
    </div>
  </div>
  <div class="prose prose-sm dark:prose-invert prose-orange dark:prose-teal">
    <Content />
  </div>
</div>